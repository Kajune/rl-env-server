# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import rl_env_server_pb2 as rl__env__server__pb2


class RLEnvServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.on_connected = channel.unary_unary(
                '/env.RLEnvServer/on_connected',
                request_serializer=rl__env__server__pb2.ConnectionRequest.SerializeToString,
                response_deserializer=rl__env__server__pb2.Void.FromString,
                )
        self.on_disconnected = channel.unary_unary(
                '/env.RLEnvServer/on_disconnected',
                request_serializer=rl__env__server__pb2.ConnectionRequest.SerializeToString,
                response_deserializer=rl__env__server__pb2.Void.FromString,
                )
        self.numConnection = channel.unary_unary(
                '/env.RLEnvServer/numConnection',
                request_serializer=rl__env__server__pb2.Void.SerializeToString,
                response_deserializer=rl__env__server__pb2.NumConnectionResponse.FromString,
                )
        self.echo = channel.unary_unary(
                '/env.RLEnvServer/echo',
                request_serializer=rl__env__server__pb2.EchoRequest.SerializeToString,
                response_deserializer=rl__env__server__pb2.EchoResponse.FromString,
                )
        self.init = channel.unary_unary(
                '/env.RLEnvServer/init',
                request_serializer=rl__env__server__pb2.InitRequest.SerializeToString,
                response_deserializer=rl__env__server__pb2.InitResponse.FromString,
                )
        self.func = channel.unary_unary(
                '/env.RLEnvServer/func',
                request_serializer=rl__env__server__pb2.FuncRequest.SerializeToString,
                response_deserializer=rl__env__server__pb2.FuncResponse.FromString,
                )
        self.property = channel.unary_unary(
                '/env.RLEnvServer/property',
                request_serializer=rl__env__server__pb2.PropertyRequest.SerializeToString,
                response_deserializer=rl__env__server__pb2.PropertyResponse.FromString,
                )


class RLEnvServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def on_connected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def on_disconnected(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def numConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def echo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def func(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def property(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RLEnvServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'on_connected': grpc.unary_unary_rpc_method_handler(
                    servicer.on_connected,
                    request_deserializer=rl__env__server__pb2.ConnectionRequest.FromString,
                    response_serializer=rl__env__server__pb2.Void.SerializeToString,
            ),
            'on_disconnected': grpc.unary_unary_rpc_method_handler(
                    servicer.on_disconnected,
                    request_deserializer=rl__env__server__pb2.ConnectionRequest.FromString,
                    response_serializer=rl__env__server__pb2.Void.SerializeToString,
            ),
            'numConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.numConnection,
                    request_deserializer=rl__env__server__pb2.Void.FromString,
                    response_serializer=rl__env__server__pb2.NumConnectionResponse.SerializeToString,
            ),
            'echo': grpc.unary_unary_rpc_method_handler(
                    servicer.echo,
                    request_deserializer=rl__env__server__pb2.EchoRequest.FromString,
                    response_serializer=rl__env__server__pb2.EchoResponse.SerializeToString,
            ),
            'init': grpc.unary_unary_rpc_method_handler(
                    servicer.init,
                    request_deserializer=rl__env__server__pb2.InitRequest.FromString,
                    response_serializer=rl__env__server__pb2.InitResponse.SerializeToString,
            ),
            'func': grpc.unary_unary_rpc_method_handler(
                    servicer.func,
                    request_deserializer=rl__env__server__pb2.FuncRequest.FromString,
                    response_serializer=rl__env__server__pb2.FuncResponse.SerializeToString,
            ),
            'property': grpc.unary_unary_rpc_method_handler(
                    servicer.property,
                    request_deserializer=rl__env__server__pb2.PropertyRequest.FromString,
                    response_serializer=rl__env__server__pb2.PropertyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'env.RLEnvServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RLEnvServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def on_connected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/env.RLEnvServer/on_connected',
            rl__env__server__pb2.ConnectionRequest.SerializeToString,
            rl__env__server__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def on_disconnected(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/env.RLEnvServer/on_disconnected',
            rl__env__server__pb2.ConnectionRequest.SerializeToString,
            rl__env__server__pb2.Void.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def numConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/env.RLEnvServer/numConnection',
            rl__env__server__pb2.Void.SerializeToString,
            rl__env__server__pb2.NumConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def echo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/env.RLEnvServer/echo',
            rl__env__server__pb2.EchoRequest.SerializeToString,
            rl__env__server__pb2.EchoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/env.RLEnvServer/init',
            rl__env__server__pb2.InitRequest.SerializeToString,
            rl__env__server__pb2.InitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def func(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/env.RLEnvServer/func',
            rl__env__server__pb2.FuncRequest.SerializeToString,
            rl__env__server__pb2.FuncResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def property(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/env.RLEnvServer/property',
            rl__env__server__pb2.PropertyRequest.SerializeToString,
            rl__env__server__pb2.PropertyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
